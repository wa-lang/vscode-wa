{
  ".source.wa": {
    "single import": {
      "prefix": "im",
      "body": ["import \"${1:pkg}\""],
      "description": "Snippet for import statement"
    },
    "multiple imports": {
      "prefix": "ims",
      "body": ["import (", "\t${1:pkg}", ")"],
      "description": "Snippet for a import block"
    },
    "single constant": {
      "prefix": "co",
      "body": ["const ${1:name} = ${2:value}"],
      "description": "Snippet for a constant"
    },
    "multiple constants": {
      "prefix": "cos",
      "body": ["const (", "\t${1:name} = ${2:value}", ")"],
      "description": "Snippet for a constant block"
    },
    "single variable declaration": {
      "prefix": "va",
      "body": ["var ${1:name} ${2:type}"],
      "description": "Snippet for a variable"
    },
    "multiple variable assignment": {
      "prefix": "vas",
      "body": ["var (", "\t${1:name} ${2:type}", ")"],
      "description": "Snippet for a variable block"
    },
    "type function declaration": {
      "prefix": "tyf",
      "body": ["type ${1:name} func($3) $4"],
      "description": "Snippet for a type function declaration"
    },
    "type interface declaration": {
      "prefix": "tyi",
      "body": ["type ${1:name} interface {", "\t$0", "}"],
      "description": "Snippet for a type interface"
    },
    "type struct declaration": {
      "prefix": "tys",
      "body": ["type ${1:name} struct {", "\t$0", "}"],
      "description": "Snippet for a struct declaration"
    },
    "single if statement": {
      "prefix": "if",
      "body": ["if ${1:cond} {", "\t$0", "}"],
      "description": "Snippet for if statement"
    },
    "single if else statement": {
      "prefix": "ife",
      "body": ["if ${1:cond} {", "\t$0", "} else {", "\t$0", "}"],
      "description": "Snippet for if else statement"
    },
    "single if != nil statement": {
      "prefix": "ifn",
      "body": ["if ${1:cond} != nil {", "\t$0", "}"],
      "description": "Snippet for if != nil statement"
    },
    "single for statement": {
      "prefix": "for",
      "body": ["for ${1:cond} {", "\t$0", "}"],
      "description": "Snippet for for statement"
    },
    "single switch statement": {
      "prefix": "sw",
      "body": ["switch ${1:expr} {", "\t$0", "}"],
      "description": "Snippet for switch statement"
    },
    "single switch case statement": {
      "prefix": "swc",
      "body": ["switch ${1:expr} {", "case ${2:cond}:", "\t$0", "}"],
      "description": "Snippet for switch case statement"
    },
    "single switch default statement": {
      "prefix": "swd",
      "body": ["switch ${1:expr} {", "default:", "\t$0", "}"],
      "description": "Snippet for switch default statement"
    },
    "single switch case default statement": {
      "prefix": "swcd",
      "body": ["switch ${1:expr} {", "case ${2:cond1}:", "\t$3", "default ${4:cond2}:", "\t$0", "}"],
      "description": "Snippet for switch default statement"
    },
    "single defer statement": {
      "prefix": "df",
      "body": ["defer ${1:fn}()"],
      "description": "Snippet for defer statement"
    },
    "single return statement": {
      "prefix": "rt",
      "body": ["return ${1:value}"],
      "description": "Snippet for return statement"
    },
    "single break statement": {
      "prefix": "br",
      "body": ["break"],
      "description": "Snippet for break statement"
    },
    "single continue statement": {
      "prefix": "cn",
      "body": ["continue"],
      "description": "Snippet for continue statement"
    },
    "single label statement": {
      "prefix": "lb",
      "body": ["${1:label}:"],
      "description": "Snippet for label statement"
    },
    "function declaration": {
      "prefix": "f",
      "body": ["fn ${1:name}($2) $3 {", "\t$0", "}"],
      "description": "Snippet for function declaration"
    },
    "for statement": {
      "prefix": "for",
      "body": ["for ${1:i} := ${2:0}; $1 < ${3:count}; $1${4:++} {", "\t$0", "}"],
      "description": "Snippet for for statement"
    },
    "for range statement": {
      "prefix": "forr",
      "body": ["for ${1:i} := range ${2:slice} {", "\t$0", "}"],
      "description": "Snippet for for range statement"
    }
  }
}
