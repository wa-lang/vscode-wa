{
  ".source.wa": {
    "single import": {
      "prefix": "im",
      "body": [
        "import \"${1:pkg}\""
      ],
      "description": "Snippet for import statement"
    },
    "single import cn": {
      "prefix": ["导入", "daoru", "dr"],
      "body": [
        "导入 \"${1:pkg}\""
      ],
      "description": "Snippet for import statement"
    },
    "multiple imports": {
      "prefix": "ims",
      "body": [
        "import (",
        "\t${1:pkg}",
        ")"
      ],
      "description": "Snippet for a import block"
    },
    "single constant": {
      "prefix": "co",
      "body": [
        "const ${1:name} = ${2:value}"
      ],
      "description": "Snippet for a constant"
    },
    "single constant cn": {
      "prefix": ["常量", "cl", "changliang"],
      "body": [
        "常量 ${1:name} = ${2:value}"
      ],
      "description": "Snippet for a constant"
    },
    "multiple constants": {
      "prefix": "cos",
      "body": [
        "const (",
        "\t${1:name} = ${2:value}",
        ")"
      ],
      "description": "Snippet for a constant block"
    },
    "single variable declaration": {
      "prefix": "va",
      "body": [
        "var ${1:name} = ${2:type}"
      ],
      "description": "Snippet for a variable"
    },
    "single variable declaration cn": {
      "prefix": ["变量", "bianliang", "bl"],
      "body": [
        "变量 ${1:name} = ${2:type}"
      ],
      "description": "Snippet for a variable"
    },
    "multiple variable assignment": {
      "prefix": "vas",
      "body": [
        "var (",
        "\t${1:name} = ${2:type}",
        "\t$3",
        ")"
      ],
      "description": "Snippet for a variable block"
    },
    "type function declaration": {
      "prefix": "tyf",
      "body": [
        "type ${1:name} func($3) $4"
      ],
      "description": "Snippet for a type function declaration"
    },
    "type function declaration cn": {
      "prefix": ["函数类型", "hanshuleixing", "hslx"],
      "body": [
        "类型 ${1:name} 函数($3) $4"
      ],
      "description": "Snippet for a type function declaration"
    },
    "type interface declaration": {
      "prefix": "tyi",
      "body": [
        "type ${1:name} interface {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for a type interface"
    },
    "type interface declaration cn": {
      "prefix": ["接口", "jiekou", "jk"],
      "body": [
        "类型 ${1:name} 接口 {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for a type interface"
    },
    "type struct declaration": {
      "prefix": "tys",
      "body": [
        "type ${1:name} struct {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for a struct declaration"
    },
    "type struct declaration cn": {
      "prefix": ["结构", "jiegou", "jg"],
      "body": [
        "类型 ${1:name} 结构 {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for a struct declaration"
    },
    "single if statement": {
      "prefix": "if",
      "body": [
        "if ${1:cond} {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for if statement"
    },
    "single if statement cn": {
      "prefix": ["如果", "ruguo", "rg"],
      "body": [
        "如果 ${1:cond} {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for if statement"
    },
    "single if else statement": {
      "prefix": "ife",
      "body": [
        "if ${1:cond} {",
        "\t$0",
        "} else {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for if else statement"
    },
    "single if else statement cn": {
      "prefix": ["如果否则", "ruguofouze", "rgfz"],
      "body": [
        "如果 ${1:cond} {",
        "\t$0",
        "} 否则 {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for if else statement"
    },
    "single if != nil statement": {
      "prefix": "iferr",
      "body": [
        "if ${1:cond} != nil {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for if != nil statement"
    },
    "single if != nil statement cn": {
      "prefix": ["如果错误", "ruguocuowu", "rgcw"],
      "body": [
        "如果 ${1:cond} != nil {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for if != nil statement"
    },
    "for statement": {
      "prefix": "for",
      "body": [
        "for ${1:i} := ${2:0}; $1 < ${3:count}; $1${4:++} {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for for statement"
    },
    "for statement cn": {
      "prefix": ["循环", "xunhuan", "xh"],
      "body": [
        "循环 ${1:i} := ${2:0}; $1 < ${3:count}; $1${4:++} {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for for statement"
    },
    "for range statement": {
      "prefix": "forr",
      "body": [
        "for ${1:_, }${2:v} := range ${3:v} {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for for range statement"
    },
    "for range statement cn": {
      "prefix": ["循环区间", "xunhuanqujian", "xhqj"],
      "body": [
        "循环 ${1:_, }${2:v} := 区间 ${3:v} {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for for range statement"
    },
    "single switch statement": {
      "prefix": "sw",
      "body": [
        "switch ${1:expr} {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for switch statement"
    },
    "single switch statement cn": {
      "prefix": ["找辙", "zhaozhe", "zz"],
      "body": [
        "找辙 ${1:expr} {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for switch statement"
    },
    "single switch case statement": {
      "prefix": "swc",
      "body": [
        "switch ${1:expr} {",
        "case ${2:cond}:",
        "\t$0",
        "}"
      ],
      "description": "Snippet for switch case statement"
    },
    "single switch case statement cn": {
      "prefix": ["找辙有辙", "zhaozheyouzhe", "zzyz"],
      "body": [
        "找辙 ${1:expr} {",
        "有辙 ${2:cond}:",
        "\t$0",
        "}"
      ],
      "description": "Snippet for switch case statement"
    },
    "single switch default statement": {
      "prefix": "swd",
      "body": [
        "switch ${1:expr} {",
        "default:",
        "\t$0",
        "}"
      ],
      "description": "Snippet for switch default statement"
    },
    "single switch default statement cn": {
      "prefix": ["找辙没辙", "zhaozhemezhe", "zzmz"],
      "body": [
        "找辙 ${1:expr} {",
        "没辙:",
        "\t$0",
        "}"
      ],
      "description": "Snippet for switch default statement"
    },
    "single switch case default statement": {
      "prefix": "swcd",
      "body": [
        "switch ${1:expr} {",
        "case ${2:cond1}:",
        "\t$3",
        "default ${4:cond2}:",
        "\t$0",
        "}"
      ],
      "description": "Snippet for switch default statement"
    },
    "single switch case default statement cn": {
      "prefix": ["找辙有辙没辙", "zhaozheyouzhemeizhe", "zzyzmz"],
      "body": [
        "找辙 ${1:expr} {",
        "有辙 ${2:cond1}:",
        "\t$3",
        "没辙 ${4:cond2}:",
        "\t$0",
        "}"
      ],
      "description": "Snippet for switch default statement"
    },
    "single defer statement": {
      "prefix": "df",
      "body": [
        "defer ${1:fn}()"
      ],
      "description": "Snippet for defer statement"
    },
    "single defer statement cn": {
      "prefix": ["善后", "shanhou", "sh"],
      "body": [
        "善后 ${1:fn}()"
      ],
      "description": "Snippet for defer statement"
    },
    "single return statement": {
      "prefix": "rt",
      "body": [
        "return ${1:value}"
      ],
      "description": "Snippet for return statement"
    },
    "single return statement cn": {
      "prefix": ["返回", "fanhui", "fh"],
      "body": [
        "返回 ${1:value}"
      ],
      "description": "Snippet for return statement"
    },
    "single break statement": {
      "prefix": "br",
      "body": [
        "break"
      ],
      "description": "Snippet for break statement"
    },
    "single break statement cn": {
      "prefix": ["跳出", "tiaochu", "tc"],
      "body": [
        "跳出"
      ],
      "description": "Snippet for break statement"
    },
    "single continue statement": {
      "prefix": "cn",
      "body": [
        "continue"
      ],
      "description": "Snippet for continue statement"
    },
    "single continue statement cn": {
      "prefix": ["继续", "jixu", "jx"],
      "body": [
        "继续"
      ],
      "description": "Snippet for continue statement"
    },
    "function declaration": {
      "prefix": "f",
      "body": [
        "fn ${1:name}($2) $3 {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for function declaration"
    },
    "function declaration cn": {
      "prefix": ["函数", "hanshu", "hs"],
      "body": [
        "函数 ${1:name}($2) $3 {",
        "\t$0",
        "}"
      ],
      "description": "Snippet for function declaration"
    }
  }
}
